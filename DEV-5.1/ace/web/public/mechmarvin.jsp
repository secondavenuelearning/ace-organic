<?xml version="1.0" encoding="utf-8"?>
<%@ page language="java" %>
<%@ page import="
	chemaxon.calculations.hydrogenize.Hydrogenize,
	chemaxon.formats.MolImporter,
	chemaxon.struc.Molecule,
	com.epoch.AppConfig,
	com.epoch.chem.MolString,
	com.epoch.chem.MolCompare,
	com.epoch.mechanisms.MechError,
	com.epoch.mechanisms.MechSolver,
	com.epoch.qBank.Question,
	com.epoch.utils.Utils"
%>
<%
	request.setCharacterEncoding("UTF-8");
	final String pathToRoot = "../";
	final String MRV_EXPORT = Utils.MRV.split(":")[0]; // until Marvin JS understands export parameters

	final String reactants = request.getParameter("reactants");
	// Utils.alwaysPrint("mechmarvin.jsp: reactants = ", reactants);
	String products = null;

	boolean areResStrucs = false;
	String caughtError = "";
	if (reactants != null) {
		try {
			final MechSolver solver = new MechSolver(reactants);
			final boolean FROM_JSP = true;
			products = MolString.toString(solver.getProducts(FROM_JSP), Utils.MRV);
			// Utils.alwaysPrint("mechmarvin.jsp: got products:\n", products);
		} catch (MechError e) {
			e.printStackTrace();
			products = e.calcdProds;
			caughtError = e.getMessage();
		} catch (Exception e) {
			e.printStackTrace();
			products = reactants;
			caughtError = e.getMessage();
		}
		if (products == null) {
			products = reactants;
		} else {
			areResStrucs = MolCompare.areResonanceStructures(products, reactants);
		}
	}
	final String APPLET_NAME = "mechapplet";

	String initStr = ""; 
	/*
	initStr = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
+ "<cml xmlns=\"http://www.chemaxon.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.chemaxon.com/marvin/schema/mrvSchema_20_9_0.xsd\" version=\"ChemAxon file format v20.9.0, generated by v20.16.0\">"
+ "<MDocument>"
+ "  <MChemicalStruct>"
+ "    <molecule molID=\"m1\">"
+ "      <atomArray>"
+ "        <atom id=\"a1\" elementType=\"C\" x2=\"16.2623\" y2=\"-0.8818\"/>"
+ "        <atom id=\"a2\" elementType=\"O\" x2=\"15.2429\" y2=\"1.9967\"/>"
+ "        <atom id=\"a3\" elementType=\"C\" x2=\"14.4042\" y2=\"0.7051\"/>"
+ "        <atom id=\"a4\" elementType=\"C\" x2=\"14.0840\" y2=\"2.2115\"/>"
+ "        <atom id=\"a5\" elementType=\"F\" lonePair=\"3\" x2=\"12.8978\" y2=\"0.3850\"/>"
+ "        <atom id=\"a6\" elementType=\"F\" lonePair=\"3\" x2=\"13.9283\" y2=\"-0.7595\"/>"
+ "        <atom id=\"a7\" elementType=\"C\" x2=\"15.7864\" y2=\"-2.3464\"/>"
+ "        <atom id=\"a8\" elementType=\"C\" x2=\"16.8168\" y2=\"-3.4909\"/>"
+ "        <atom id=\"a9\" elementType=\"C\" x2=\"18.3232\" y2=\"-3.1707\"/>"
+ "        <atom id=\"a10\" elementType=\"C\" x2=\"19.9771\" y2=\"2.7784\"/>"
+ "        <atom id=\"a11\" elementType=\"C\" x2=\"19.1528\" y2=\"0.2416\"/>"
+ "        <atom id=\"a12\" elementType=\"C\" x2=\"15.9358\" y2=\"0.5442\"/>"
+ "        <atom id=\"a13\" elementType=\"O\" lonePair=\"2\" x2=\"17.5081\" y2=\"0.0234\"/>"
+ "        <atom id=\"a14\" elementType=\"C\" x2=\"16.5621\" y2=\"1.9510\"/>"
+ "        <atom id=\"a15\" elementType=\"Al\" x2=\"17.8236\" y2=\"5.9650\"/>"
+ "        <atom id=\"a16\" elementType=\"C\" x2=\"18.9680\" y2=\"6.9955\"/>"
+ "        <atom id=\"a17\" elementType=\"C\" x2=\"19.3335\" y2=\"4.9242\"/>"
+ "        <atom id=\"a18\" elementType=\"C\" x2=\"16.3590\" y2=\"6.4408\"/>"
+ "        <atom id=\"a19\" elementType=\"Al\" x2=\"18.8326\" y2=\"1.7479\"/>"
+ "        <atom id=\"a20\" elementType=\"C\" x2=\"16.7269\" y2=\"2.4083\"/>"
+ "        <atom id=\"a21\" elementType=\"C\" x2=\"17.1124\" y2=\"3.8993\"/>"
+ "        <atom id=\"a22\" elementType=\"F\" x2=\"15.2975\" y2=\"1.2634\"/>"
+ "        <atom id=\"a23\" elementType=\"F\" x2=\"12.6561\" y2=\"1.6346\"/>"
+ "        <atom id=\"a24\" elementType=\"F\" x2=\"14.2983\" y2=\"3.7365\"/>"
+ "        <atom id=\"a25\" elementType=\"C\" x2=\"19.3537\" y2=\"-4.3152\"/>"
+ "        <atom id=\"a26\" elementType=\"C\" x2=\"20.8600\" y2=\"-3.9950\"/>"
+ "        <atom id=\"a27\" elementType=\"C\" x2=\"21.3359\" y2=\"-2.5303\"/>"
+ "        <atom id=\"a28\" elementType=\"C\" x2=\"20.3054\" y2=\"-1.3859\"/>"
+ "        <atom id=\"a29\" elementType=\"C\" x2=\"18.7991\" y2=\"-1.7061\"/>"
+ "      </atomArray>"
+ "      <bondArray>"
+ "        <bond id=\"b1\" atomRefs2=\"a3 a5\" order=\"1\"/>"
+ "        <bond id=\"b2\" atomRefs2=\"a3 a6\" order=\"1\"/>"
+ "        <bond id=\"b3\" atomRefs2=\"a1 a7\" order=\"1\"/>"
+ "        <bond id=\"b4\" atomRefs2=\"a7 a8\" order=\"1\"/>"
+ "        <bond id=\"b5\" atomRefs2=\"a8 a9\" order=\"1\"/>"
+ "        <bond id=\"b6\" atomRefs2=\"a3 a4\" order=\"1\"/>"
+ "        <bond id=\"b7\" atomRefs2=\"a3 a12\" order=\"1\"/>"
+ "        <bond id=\"b8\" atomRefs2=\"a12 a2\" order=\"1\"/>"
+ "        <bond id=\"b9\" atomRefs2=\"a12 a1\" order=\"1\"/>"
+ "        <bond id=\"b10\" atomRefs2=\"a1 a13\" order=\"1\"/>"
+ "        <bond id=\"b11\" atomRefs2=\"a12 a14\" order=\"1\"/>"
+ "        <bond id=\"b12\" atomRefs2=\"a15 a16\" order=\"1\"/>"
+ "        <bond id=\"b13\" atomRefs2=\"a15 a17\" order=\"1\"/>"
+ "        <bond id=\"b14\" atomRefs2=\"a15 a18\" order=\"1\"/>"
+ "        <bond id=\"b15\" atomRefs2=\"a19 a10\" order=\"1\"/>"
+ "        <bond id=\"b16\" atomRefs2=\"a19 a11\" order=\"1\"/>"
+ "        <bond id=\"b17\" atomRefs2=\"a13 a19\" order=\"1\"/>"
+ "        <bond id=\"b18\" atomRefs2=\"a20 a2\" order=\"1\"/>"
+ "        <bond id=\"b19\" atomRefs2=\"a21 a20\" order=\"1\"/>"
+ "        <bond id=\"b20\" atomRefs2=\"a22 a4\" order=\"1\"/>"
+ "        <bond id=\"b21\" atomRefs2=\"a4 a23\" order=\"1\"/>"
+ "        <bond id=\"b22\" atomRefs2=\"a4 a24\" order=\"1\"/>"
+ "        <bond id=\"b23\" atomRefs2=\"a9 a25\" order=\"2\"/>"
+ "        <bond id=\"b24\" atomRefs2=\"a9 a29\" order=\"1\"/>"
+ "        <bond id=\"b25\" atomRefs2=\"a25 a26\" order=\"1\"/>"
+ "        <bond id=\"b26\" atomRefs2=\"a26 a27\" order=\"2\"/>"
+ "        <bond id=\"b27\" atomRefs2=\"a27 a28\" order=\"1\"/>"
+ "        <bond id=\"b28\" atomRefs2=\"a28 a29\" order=\"2\"/>"
+ "      </bondArray>"
+ "    </molecule>"
+ "  </MChemicalStruct>"
+ "</MDocument>"
+ "</cml>";
	final Molecule initMol = MolImporter.importMol(initStr);
	Utils.alwaysPrintMRV("mechmarvin.jsp: starting with:\n", initMol);
	Hydrogenize.convertImplicitHToExplicit(initMol);
	Utils.alwaysPrintMRV("mechmarvin.jsp: after explicitizing H atoms:\n", initMol);
	/**/

%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<head>
<title>Mechanism calculator</title>

<!-- place values so updatePage() can find them
	follows ACE conventions: four-@-delimited strings.
	reactantsValue = @@@@<%= Utils.lineBreaksToJS(reactants) %>@@@@
	productsValue = @@@@<%= Utils.lineBreaksToJS(products == null ? null
			: products.replaceAll("\\\\n", "\\\\N")) %>@@@@
	reactantsXMLValue = @@@@<%= Utils.lineBreaksToJS(
			MolString.getImage(pathToRoot, reactants, Question.SHOWLONEPAIRS, 
				"reactants", false)) %>@@@@
	productsXMLValue = @@@@<%= Utils.lineBreaksToJS(
			MolString.getImage(pathToRoot, products, Question.SHOWLONEPAIRS, 
				"products", false)) %>@@@@
	areResStrucsValue = @@@@<%= areResStrucs %>@@@@
	caughtErrorValue = @@@@<%= Utils.lineBreaksToJS(caughtError) %>@@@@
-->

<script src="<%= pathToRoot %>js/ajax.js" type="text/javascript"></script>
<script src="<%= pathToRoot %>js/jslib.js" type="text/javascript"></script>
<script src="<%= pathToRoot %>js/buttonImgs.js" type="text/javascript"></script>
<script src="<%= pathToRoot %>js/marvinJSStart.js" type="text/javascript"></script>
<script src="<%= pathToRoot %>js/openwindows.js" type="text/javascript"></script>
<script src="<%= pathToRoot %>js/xmlLib.js" type="text/javascript"></script>
<script src="https://marvinjs.chemicalize.com/v1/<%= 
		AppConfig.marvinJSLicense %>/client-settings.js"></script>
<script src="https://marvinjs.chemicalize.com/v1/client.js"></script>
<link rel="stylesheet" href="<%= pathToRoot %>includes/epoch.css" type="text/css"/>
<script type="text/javascript">
	// <!-- >

	<%@ include file="../js/marvinQuestionConstants.jsp.h" %>

	function loadSelections() { ; }

	function callServer() {
		var url = 'mechmarvin.jsp';
		var toSend = 'reactants=';
		marvinSketcherInstances['<%= APPLET_NAME %>'].
				exportStructure('<%= MRV_EXPORT %>').then(function(mol) {
			// alert('calling server with ' + mol);
			toSend += encodeURIComponent(mol);
			setValue('submit', ' Processing ... ');
			disableCell('submit');
			callAJAX(url, toSend);
		}, function(error) {
			alert('Molecule export failed:' + error);	
		});
	} // callServer()

	function updatePage() {
		if (xmlHttp.readyState === 4) { // ready to continue
			var response = xmlHttp.responseText;
			// the response is the entire web page
			var reactantsValue = extractField(response, 'reactantsValue');
			var productsValue = extractField(response, 'productsValue').replace(/\\N/g, '\\n');
			// alert('reactants = ' + reactantsValue);
			// alert('products = ' + productsValue);
			var areResStrucsValue = extractField(response, 'areResStrucsValue') === 'true';
			var caughtErrorValue = extractField(response, 'caughtErrorValue');
			// use innerHTML to change text & images upon receipt of results
			if (!isEmpty(caughtErrorValue)) {
				setInnerHTML('intro', 'The mechanism calculation threw the '
						+ 'following error:<br/>' + caughtErrorValue);
			} else if (!isEmpty(reactantsValue)) {
				var reactantsXMLValue = extractField(response, 'reactantsXMLValue');
				var productsXMLValue = extractField(response, 'productsXMLValue');
				// alert('reactants XML = ' + reactantsXMLValue);
				// alert('products XML = ' + productsXMLValue);
				setInnerHTML('reactants', reactantsXMLValue);
				setInnerHTML('reactionArrow', 
						'<img style="vertical-align:middle;" '
						+ 'hspace=20 height=12 width=64 src="img/'
						+ (areResStrucsValue ? 'res' : 'rxn') + 'arrow.jpeg">');
				setInnerHTML('products', productsXMLValue);
				setInnerHTML('intro', 'Draw another mechanistic step involving the'
						+ ' calculated products or one or more other'
						+ ' compounds, and try it again!<br/>&nbsp;');
			} else {
				setInnerHTML('intro', 'No reactants detected; try again. ');
			}				
			marvinSketcherInstances['<%= APPLET_NAME %>'].
					importStructure('<%= Utils.MRV %>', productsValue);
			enableCell('submit');
			setValue('submit', ' View Products ');
		} // ready to continue
	} // updatePage()

	// -->
</script>
</head>

<body style="overflow:auto;">

<br/>

<!-- self submit form -->
<form name="tester" action="mechmarvin.jsp" method="post">
<input type="hidden" name="reactants" value=""/>
<table style="width:650px; margin-left:auto; margin-right:auto;">
<tr><td colspan="2">
<p class="boldtext big" style="text-align:center;">
ACE mechanism calculator
<br/>&nbsp;
</td></tr>
<tr><td class="regtext" id="intro"  colspan="2">
	Draw a mechanistic step involving one or more compounds and
	electron-flow arrows, and press <b>View Products</b> to calculate the
	products.  
	<br/>&nbsp;
</td></tr>
	<tr style="text-align:center;">
	<td style="text-align:center;" colspan="2">
	<table style="margin-left:auto; margin-right:auto;"><tr>
		<td style="text-align:center;" id="reactants"></td>
		<td style="text-align:center;" id="reactionArrow"></td>
		<td style="text-align:center;" id="products"></td>
	</tr></table>
	</td>
	</tr>
<tr>
<td style="text-align:center;" colspan="2">
	<div id="<%= APPLET_NAME %>" style="text-align:center;">
	<script type="text/javascript">
		// <!-- >
		startMarvinJS('<%= Utils.toValidJS(initStr) %>',
				MECHANISM, SHOWLONEPAIRS, 
				'<%= APPLET_NAME %>', '<%= pathToRoot %>'); 
	</script>
	</div>
</td>
</tr>
<tr>
<td style="text-align:center;" colspan="2">
	<table style="margin-left:auto; margin-right:auto;"><tr><td>
		<br/>
		<input type="button" id="submit" value=" View Products " onclick="callServer()"/>
		<br/>
		<br/>
	</td></tr></table>
</td>
</tr>

<tr>
<td align="left" class="regtext" >
<a href="welcome.html">Back</a> to public ACE pages.
</td>
</tr>

</table>
</form>
</body>
</html>


